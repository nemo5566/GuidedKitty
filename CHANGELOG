Version 0.7.2 (2019-02-17)
==========================

* The main feature of this release is **Python3 Support**. It was initiated and implemented mainly by GH0st3rs - Thanks!!
* bugfix: [DataModel] raise exception if no fields are passed to a List object
* bugfix: [kitty-tool] fix handling of templates in collections
* bugfix: [kitty-tool] fix undefined variable in progress printing
* bugfix: [WebInterface] add missing div tag
* enhancement: [kitty-tool] print exception trace in verbose mode

Version 0.7.1 (2017-03-31)
==========================

* bugfix: [DataModel] fixed default value of Pad container
* bugfix: [TestList] fix string representation for some test ranges
* new feature: [DataModel] BitField now supports full range mutation
* enhancement: [EmptyController] now have a default name

Version 0.7.0 (2016-11-11)
==========================

* bugfix: [DataModel] set default sequence for StagedSequenceModel (issue #62)
* bugfix: [Fuzzer] fixed start indices when resuming from session file
* enhancement: [WebInterface] Improved display of test list in user interface/html
* new feature: [Fuzzer] add "retest" option (issue #26)
* new feature: [Fuzzer] New test listing options (issue #26)
* removed feature: [Fuzzer] removed --start and --end command line arguments

Version 0.6.10 (2016-10-26)
===========================

* bugfix: [DataModel] fixed hash of PsuedoTemplate to avoid collision
* bugfix: [DataModel] self mutations of containers are not ignored anymore if they are the only mutations
* enhancement: [DataModel] absolute name does not require the template name anymore
* new feature: [DataModel] List supports a delimiter field

Version 0.6.9 (2016-06-04)
==========================

* bugfix: [DataModel] fixed container bug - check rendered type of fields when generating default buffer
* bugfix: [DataModel] fixed inheritence of BitsFuncEncoder
* bugfix: [DataModel] List threw exception if had only one element
* bugfix: [DataModel] Meta field default rendered value was not empty
* bugfix: [WebInterface] html - check if data exists before using it to fill test info
* new feature: [ClientTarget] mark trigger timeout as an error, not failure
* new feature: [DataModel] new field - PsuedoTemplate

Version 0.6.8 (2016-05-04)
==========================

* bugfix: [DataModel] Delimiter field's __init__ didn't receive nor passed an encoder
* bugfix: [DataModel] condition - added copy function and fixed invalidate function
* bugfix: [DataModel] rendering of default values in containers
* enhancement: [WebInterface] html - improvements in index and reports display
* new feature: [DataModel] new field - Float
* new feature: [DataModel] new field - Switch

Version 0.6.7 (2016-04-18)
==========================

* bugfix: [BaseFuzzer] update test info before the calling target's pre_test
* bugfix: [DataModel] fixed "field path" in field info
* bugfix: [kitty-tool] fixed command line option parsing
* enhancement: [BaseFuzzer] default logging level is now INFO, hence less messages are printed, can be controlled from cmd line args
* enhancement: [DataModel] perform render in two passes when needed, avoid (some) redundant rendering in between
* enhancement: [DataModel] reduce number of mutations for BitField & String field. This cuts the mutation count to about half of the previous count.
* enhancement: [WebInterface] html - improvements of caching, window size, cell overflow
* new feature: [DataModel] new conditions - BitMaskSet and BitMaskNotSet
* new feature: [DataModel] new container - List - will perform the standard mutations of each of the internal fields, but will also perform mutations on the order and existence of its elements.
* new feature: [DataModel] new fields - Offset & AbsoluteOffset - can hold the offset of a specific field inside the template
* new feature: [DataModel] absolute name resolution of fields
* new feature: [DataModel] now String and BitField have a human friendly mutation description in the info
* new feature: [KittyActor] a new class, KittyActor, is now the base class for monitors and controllers
* new feature: [KittyActor] a new API is_victim_alive can be used to check if the victim is alive, it is called in a loop in pre-test
* new feature: [kitty-tool] added checks for mutation indices in "generate"
* new feature: [kitty-tool] print progress and current field path in "generate"
* new feature: [Report] use 'status' field instead of 'failed' field in the report. currently support FAILED, PASSED and ERROR.
* new feature: [WebInterface] html - report table now shows test status and reason

Version 0.6.6 (2016-04-03)
==========================

* bugfix: [WebInterface] Fixed responses to API calls (pause/resume)
* bugfix: [ClientFuzzer] fix advancement in path when get_mutation is called
* bugfix: [BaseFuzzer] fixed typo in cmd line arg
* new feature: [WebInterface] New web interface design, allowing export of reports and showing more relevant status
* new feature: [DataManager] Support generic (volatile) content operations (still synchronized)
* new feature: [kitty-tool] add out-file name format command line option
* new feature: [Fuzzer] perform environment test before starting the actual fuzzing session

Version 0.6.5 (2016-03-20)
==========================

* bugfix: [ClientFuzzer] Fixed off-by-one bug in the fuzzing index (start/end) of client fuzzer
* bugfix: [ClientFuzzer] Protect from multiple calls to start (can now restart stack without restarting fuzzer)
* bugfix: [ClientFuzzer] Fixed exception when there are no stage to log
* new feature: [ClientFuzzer] Added requested stages (by the stack) to the report
* new feature: [ClientFuzzer] Added API to check if client fuzzer is done fuzzing
* new feature: [Remote] Added stop API for RPC server

Version 0.6.4 (2016-03-13)
==========================

* bugfix: [package] fixed package name in get_distribution calls

Version 0.6.3 (2016-03-13)
==========================

* bugfix: [Web Interface] cleaner shutdown
* new feature: [Tools] kitty-tool, will replace other cmd line tools in the future
* now indexed in PyPi as kittyfuzzer

Version 0.6.2 (2016-03-01)
==========================

* bugfix: [Data Manager] Handle exceptions in tasks by raising them in caller context
* bugfix: [Data Manager] Unicode strings are now properly encoded in the report
* bugfix: [Data Model] BitFieldMultiByteEncoder: fixed byte order
* bugfix: [Data Model] BlockOperation: block size validation
* bugfix: [Data Model] ByteAlignedBitsEncoder: fixed byte alignment (issue #11)
* bugfix: [Data Model] ByteFlips: removed silent failures
* bugfix: [Data Model] If/IfNot: Protect from recursive rendering
* bugfix: [Web Interface] handle errors and return descriptive message when error occurs in the report API

* new feature: [Data Model] BitFieldMultiByteEncoder: support for little endian
* new feature: [Data Model] ElementCount: field that holds the number of elements in given container
* new feature: [Data Model] IndexOf: field that holds the index of a given field in its container
* new feature: [Data Model] RandomBits: Similar to RandomBytes, but in bits (allows non-byte aligned fields)
* new feature: [Tools] kitty-template-tester: print version

* removed feature: [Data Model] Crypto Encoders were removed from Kitty and now available in Katnip v0.2.2 this removes the dependency in pycrypto from kitty (issue #7)
